server.port=8080
server.servlet.context-path=/api

#messages
spring.messages.basename=messages/messages
spring.messages.encoding=UTF-8

# ACTUATOR
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.group.custom.show-components=always
management.endpoint.health.group.custom.show-details=always


#Database connection
#spring.datasource.url=jdbc:postgresql://postgresdb:5432/bank
spring.datasource.url=jdbc:postgresql://localhost:5432/bank
spring.datasource.username=postgres
spring.datasource.password=password
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Configuración del pool de conexiones HikariCP (ajusta según tu base de datos)
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=my-pool

# Tiempos de espera y validación
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.max-lifetime=1800000

# Consulta para validar las conexiones
spring.datasource.hikari.connection-test-query=SELECT 1

#liquibase
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml


# LOGGING
logging.file.name=bank-simulation.log
logging.file.path=/var/logs/

time.to.sleep.in.seconds=3
queue.max.limit=3
